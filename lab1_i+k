#include <iostream>
#include <cmath>
using namespace std;
void square(int k, float len, float *sq);
void per(int k, float len, float *p);
void input(int *k, float *len, coordinates *c, int *n);
void menu(figures *polygon, int *n);
struct coordinates{
    float x, y;
};
struct figures{
    int sides;
    float len;
    float sq, p;
    //coordinates *c1=new coordinates[sides];
    coordinates c1[100];
 };
int main()
{
    int choose, n=0;
    figures polygon[100];
    input(&polygon.sides, &polygon.len, &polygon.c1, &n);
    return 0;
}
void square(int k, float len, float *sq){
    *sq=(pow(len,2)*k)/(4*tan(22/(7*k)));
}
void per(int k, float len, float *p){
    *p=s*len;
}
void input(int *k, float *len, coordinates *c, int *n){
    cout<<"Input number of sides"<<endl;
    cin>>(*k);
    cout<<"Input length"<<endl;
    cin>>(*len);
    cout<<"Input coordinates of the first point"<<endl;
    cin>>(c->x);
    cin>>(c->y);
    (*n)++;
}
void menu(figures *polygon, int *n){
    int choose;
    cout<<"Choose your option:"<<endl;
    cout<<"1-Input new information about a polygon"<<endl;
    cout<<"2-Look through the information"<<endl;
    cout<<"3-Delete information about a polygon"<<endl;
    cout<<"4-Define maximal square or perimetr"<<endl;
    cout<<"5-Quit"<<endl;
    cin>>choose;
    switch(choose){
        case 1:
            input(&polygon->sides, &polygon->len, &polygon->c1, n);
            break;
        case 2:
            for(int i=0; i<(*n); i++){
                cout<<
            }
            break;
        case 3:

            break;
        case 4:

            break;
        case 5:

            break;
        default:
            cout<<"Error. Try again."
            break;

    }

}
